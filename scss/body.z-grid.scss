// Layout
// WARNING! Avoid to change layout unless you know exactly what are you doing
body.z-grid {
  --z-workspace-header-height: 5rem;

  @include zen-identity;

  // Default position for <body> is static, making children relative to <html>
  position: fixed;

  box-sizing: border-box;
  margin: 0;
  margin-top: var(--z-workspace-header-height);
  overflow: auto;

  width: 100vw;
  height: calc(100vh - var(--z-workspace-header-height));

  display: flex;
  flex-direction: column;

  background-color: var(--color-background);

  >.z-content {
    box-sizing: border-box;
    overflow: auto;
  }

  // Regular 
  // On regular screens content will be centered
  @media screen and (min-width: $breakpoint-small) and (min-height: $breakpoint-small) {
    // align-items: center;
    // https://stackoverflow.com/questions/33454533/cant-scroll-to-top-of-flex-item-that-is-overflowing-container
    // Don't use "justify-content: center" until "justify-content: safe center" is implemented in all browsers
    // justify-content: safe center;

    padding: 2vmin;

    >.content {
      border-radius: var(--border-radius);

      min-width: $breakpoint-small;
      max-width: 60rem;
      width: 60vw;
    }
  }

  // Small 
  // On small screens content will use all available space
  @media not screen and (min-width: $breakpoint-small) and (min-height: $breakpoint-small) {
    >.content {
      flex: 1;
      width: 100%;
    }
  }

  >header {
    position: fixed;
    box-sizing: border-box;
    top: 0;
    left: 0;
    width: 100vw;
    height: var(--z-workspace-header-height);
    max-height: var(--z-workspace-header-height);
    overflow: auto;
  }

  // nav layout
  // - will be fixed below header
  // - will use all available width (scrollbar will be placed at the right of the page)
  // - will use all available height

  >nav {
    position: fixed;
    box-sizing: border-box;
    top: var(--z-workspace-header-height);
    left: 0;
    bottom: 0;
    width: 100vw;
    overflow: auto;
  }

  // main layout
  // - will use all available space
  // - will overflow

  main {
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: var(--color-background);
  }

  // z-grid
  main {
    display: flex;
    flex-direction: column;

    >.actions {
      margin-bottom: 2vh;
      padding: 0 1vw;

      ul {
        display: flex;
        flex-direction: row;
        gap: 0.5rem;

        // padding-bottom: 1vh;
        // padding: 1vh 1vw;
        width: fit-content;

        // background-color: var(--color-surface);
        border-radius: var(--border-radius);
        box-sizing: content-box;

        li {
          box-sizing: content-box;

          display: flex;

          width: 1rem;
          height: 1rem;
          padding: 0.5rem;
          border-radius: var(--border-radius);

          // background-color: var(--color-secondary);
          // fill: var(--color-on-secondary);

          // fill: var(--color-secondary);
          // border: 2px solid var(--color-secondary);

          background-color: var(--color-primary);
          fill: var(--color-on-primary);

          // fill: var(--color-primary);
          // border: 2px solid var(--color-primary);

          // background-color: var(--color-on-surface);
          // fill: var(--color-surface);

          // background-color: var(--color-primary);
          // fill: var(--color-on-surface);
        }
      }
    }

    .z-table-slot {
      flex: 1;

      // Alternative to padding above (context was overflowing above thead)
      border: 2vmin solid var(--color-surface);
    }

    .status {
      // position: relative; // se deixar relative fica sobre o menu
    }

    .status::before {
      // content: 'â—£';
      // font-weight: bold;

      content: '';
      border-left: 0.3rem solid black;
      padding-left: 0.25rem;
    }

    .status.c-1::before {
      border-color: var(--color-status-preparing);
      color: var(--color-status-preparing);
    }

    .status.c-2::before {
      border-color: var(--color-status-ready);
      color: var(--color-status-ready);
    }

    .status.c-3::before {
      border-color: var(--color-status-working);
      color: var(--color-status-working);
    }

    .status.c-4::before {
      border-color: var(--color-status-done);
      color: var(--color-status-done);
    }

    .status.c-5::before {
      border-color: var(--color-status-danger);
      color: var(--color-status-danger);
    }

    .status.c-1 {
      color: var(--color-status-preparing);
    }

    .status.c-2 {
      color: var(--color-status-ready);
    }

    .status.c-3 {
      color: var(--color-status-working);
    }

    .status.c-4 {
      color: var(--color-status-done);
    }

    .status.c-5 {
      color: var(--color-status-danger);
    }

    a::before {
      content: 'ðŸ”—';
      color: var(--color-primary);
      font-size: var(--font-size-x-small);
      padding-right: 0.1rem;
      text-align: center;
    }

    a {
      // color: var(--color-primary);
      // text-decoration: underline;
      cursor: pointer;
    }
  }

  .tags {
    // display: unset;

    span {
      margin-right: 0.2rem;
      padding: 0.15rem 0.5rem;
      border: 1px solid var(--color-border);
      border-left: 5px solid red;
      // box-shadow: 0 0 1px gray;
      border-radius: 0.15rem;
      font-size: var(--font-size-small);

      background-color: var(--color-surface);
      color: var(--color-on-surface);

      @for $i from 1 through 20 {
        &.c-#{$i} {
          border-left-color: var(--color-#{$i});
        }
      }
    }
  }

  >.z-notifications {
    top: var(--z-workspace-header-height) !important;
    max-height: calc(100vh - var(--z-workspace-header-height));
  }

  >.dialogs {
    position: fixed;
    box-sizing: border-box;
    top: 0;
    bottom: 0;
    width: 100vw;
    overflow: auto;
    // background-color: #ffffff40;
    backdrop-filter: blur(10px);

    >div {
      display: block;

      position: fixed;

      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      padding: 1rem 3rem;

      border: 1px solid var(--color-border);
      border-radius: var(--border-radius);
      box-shadow: 0 0 2px var(--color-border);

      background-color: var(--color-surface);
    }
  }
}