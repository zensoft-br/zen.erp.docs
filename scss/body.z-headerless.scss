// Layout
// WARNING! Avoid to change layout unless you know exactly what are you doing
body.z-headerless {
  @include zen-identity;
  
  // Default position for <body> is static, making children relative to <html>
  position: fixed;

  box-sizing: border-box;
  margin: 0;
  overflow: auto;

  width: 100vw;
  height: 100vh;

  display: flex;
  flex-direction: column;

  background-color: var(--color-background);

  >.z-content {
    box-sizing: border-box;
    overflow: auto;

    background-color: var(--color-surface);
  }

  // Regular 
  // On regular screens content will be centered
  @media screen and (min-width: $breakpoint-small) and (min-height: $breakpoint-small) {
    align-items: center;
    // https://stackoverflow.com/questions/33454533/cant-scroll-to-top-of-flex-item-that-is-overflowing-container
    // Don't use "justify-content: center" until "justify-content: safe center" is implemented in all browsers
    justify-content: safe center;

    padding: 2vmin;

    >.z-content {
      border-radius: var(--border-radius);

      min-width: $breakpoint-small;
      max-width: 60rem;
      width: 60vw;
    }
  }

  // Small 
  // On small screens content will use all available space
  @media not screen and (min-width: $breakpoint-small) and (min-height: $breakpoint-small) {
    >.z-content {
      flex: 1;
      width: 100%;
    }
  }
}

// Styling & internals
body.z-headerless1 {
  @include zen-identity;

  >header {
    padding: 3vmin 5vmin;

    background-color: var(--color-primary);
    color: var(--color-on-primary);

    width: 100%;
  }

  >main {
    display: flex;
    flex-direction: column;

    >h1 {
      padding: 3vmin 5vmin;

      background-color: var(--color-primary);
      color: var(--color-on-primary);
    }

    >section {
      box-sizing: border-box;
      padding: 5vmin;

      background-color: var(--color-surface);
      color: var(--color-on-surface);
    }

    >.buttons {
      display: flex;
      flex-direction: row;
      justify-content: flex-end;
      gap: 1rem;

      padding: 3vmin 5vmin;

      background-color: var(--color-surface);
      color: var(--color-on-surface);
    }

    // Regular
    @media screen and (min-width: $breakpoint-small) and (min-height: $breakpoint-small) {
      border-radius: var(--border-radius);
      min-width: $breakpoint-small;
      max-width: 50rem;
      width: 60vw;

      margin: 1rem;

      >section {
        flex: 1;
        overflow: auto;
      }
    }

    // Small
    @media not screen and (min-width: $breakpoint-small) and (min-height: $breakpoint-small) {
      background-color: white;
    }
  }
}